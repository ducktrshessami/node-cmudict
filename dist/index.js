"use strict";var u=Object.defineProperty;var x=Object.getOwnPropertyDescriptor;var S=Object.getOwnPropertyNames;var w=Object.prototype.hasOwnProperty;var A=(r,t)=>{for(var n in t)u(r,n,{get:t[n],enumerable:!0})},$=(r,t,n,s)=>{if(t&&typeof t=="object"||typeof t=="function")for(let e of S(t))!w.call(r,e)&&e!==n&&u(r,e,{get:()=>t[e],enumerable:!(s=x(t,e))||s.enumerable});return r};var v=r=>$(u({},"__esModule",{value:!0}),r);var J={};A(J,{ArticulationManner:()=>l,Dict:()=>E,Entry:()=>i,Phones:()=>Z,Symbols:()=>R,VP:()=>q});module.exports=v(J);var i=class{constructor(t,n=[]){this.name=t;this.pronunciations=[],this.tags=new Set(n)}addPronunciation(t,n){let s=new g(this,t,n);return this.pronunciations.push(s),s}toString(){return this.tags&&this.pronunciations.length?[this.pronunciations[0].toString()+` # ${[...this.tags.values()].join(", ")}`,...this.pronunciations.slice(1)].join(`
`):this.pronunciations.join(`
`)}toJSON(){return{name:this.name,pronunciations:this.pronunciations.map(t=>t.toJSON()),tags:[...this.tags.values()]}}},g=class{constructor(t,n,s=null){this.entry=t;this.note=s;this.phonemes=n.map(e=>new c(e))}toString(){return`${this.entry.name} ${this.phonemes.join(" ")}`}toJSON(){let t={phonemes:this.phonemes.map(n=>n.toString())};return this.note&&(t.note=this.note),t}},h=class{constructor(t){this.raw=t;let n=t.match(h.Pattern);this.phoneme=n.groups.phoneme,this.stress=n.groups.stress?parseInt(n.groups.stress):null}toString(){return this.raw}},c=h;c.Pattern=new RegExp("^(?<phoneme>[A-Z]+)(?<stress>[0-2])?$","i");var y=require("fs");var l=(o=>(o.Stop="stop",o.Nasal="nasal",o.Fricative="fricative",o.Affricate="affricate",o.Liquid="liquid",o.Semivowel="semivowel",o.Vowel="vowel",o.Aspirate="aspirate",o))(l||{});function f(r,t){let n=new Array;for(let s of r)n.push(t(s));return n}function m(r){return(0,y.readFileSync)(require.resolve(`cmudict/${r}`),{encoding:"utf8"})}function d(r,t){var s,e;let n=new Map;for(let a of m(r).matchAll(t)){let p=(s=n.get(a.groups.name))!=null?s:new i(a.groups.name);(e=a.groups.tags)==null||e.split(", ").forEach(P=>p.tags.add(P)),p.addPronunciation(a.groups.phonemes.split(" "),a.groups.note),n.set(p.name,p)}return n}var b=new RegExp("^(?<name>[^\\s()]+)(?:\\((?<index>\\d+)\\))? (?<phonemes>(?:[A-Z]+[0-2]?(?:(?= #)| |$))+)(?: # (?<tags>(?:[^\\s,]+(?:$|[\\s,]+))+))?$","gmi"),E=d("cmudict.dict",b),I=new RegExp("^(?<phoneme>[A-Z]+)\\s+(?<manner>[A-Z]+)$","gmi"),Z=new Map(f(m("cmudict.phones").matchAll(I),r=>[r[1],r[2]])),j=/^\S+$/gm,R=m("cmudict.symbols").match(j),N=new RegExp("^(?<name>[^A-Z\\s]+)(?<note>[^\\s()]+)?(?:\\((?<index>\\d+)\\))? (?<phonemes>(?:[A-Z]+[0-2]?(?: |$))+)","gmi"),q=d("cmudict.vp",N);0&&(module.exports={ArticulationManner,Dict,Entry,Phones,Symbols,VP});
